package com.naicha.app.dao;

import java.util.List;

import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.Repository;

import com.naicha.app.mode.Task;

public interface TaskDao extends Repository<Task, Integer> {
	public Task save(Task task);
	//order by service time;
	 @Query(nativeQuery=true,value="select t.id,t.userId,taskType,reward,servicesTime,timeLength, publicTime,notes,location,headPicture,tu.counts as signupCount , c.counts as collectionCount from "
	 		+ "task t  left join user u on t.userId=u.id  			"
	 		+ "left join (select taskId , count(userId) counts from taskuserrelation GROUP BY taskId) tu on tu.taskId=t.id 		 "
	 		+ "LEFT JOIN (select taskId,  count(userId) counts from collection GROUP BY taskId) c on c.taskId=t.id where servicesTime >= now() 	 "
	 		+ "order by servicesTime asc;")
	public List<Object[]>findByTime();
	
	/**
	 * 上拉获取更多
	 * @author yangxujia
	 * @date 2015年9月17日下午3:07:15
	 */
	@Query(nativeQuery=true,value="select t.id,t.userId,taskType,reward,servicesTime,timeLength, publicTime,notes,location,headPicture,tu.counts as signupCount , c.counts as collectionCount from "
	 		+ "task t  left join user u on t.userId=u.id  			"
	 		+ "left join (select taskId , count(userId) counts from taskuserrelation GROUP BY taskId) tu on tu.taskId=t.id 		 "
	 		+ "LEFT JOIN (select taskId,  count(userId) counts from collection GROUP BY taskId) c on c.taskId=t.id where servicesTime > ?1 	 "
	 		+ "order by servicesTime asc;")
	public List<Object[]>findByTimeSlipeUp(String servicesTime);
	
	@Query(nativeQuery=true,value="select t.id,taskType,reward,servicesTime,timeLength, notes,t.userId,u.headPicture,u.name,u.sex,u.birthday,tu.counts as signupCount from task t "
			+ "left join user u on t.userId=u.id  "
			+ "left join (select taskId , count(userId) counts from taskuserrelation GROUP BY taskId) tu on tu.taskId=t.id "
			+ "where t.id = ?1 ")
	public Object[] findDetail(Integer id);
}
